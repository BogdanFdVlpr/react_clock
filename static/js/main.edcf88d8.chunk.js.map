{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","className","React","Component","getRandomName","value","Math","random","toString","slice","App","clockName","hasClock","timerNameId","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"8MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAG1BM,QAAQC,IAAI,EAAKT,MAAMC,KAAKS,wBAC3B,OAbP,gCAgBE,SAAmBC,GACbA,EAAUC,OAASR,KAAKS,MAAMD,MAEhCJ,QAAQC,IAAR,uBAA4BE,EAAUC,KAAtC,eAAiDR,KAAKS,MAAMD,SAnBlE,kCAuBE,WACEP,OAAOS,cAAcV,KAAKD,WAxB9B,oBA2BE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KACAW,EAASR,KAAKS,MAAdD,KAER,OACE,sBAAKG,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGH,IAGF,YAED,sBAAMG,UAAU,cAAhB,SACGd,EAAKS,8BAxChB,GAA2BM,IAAMC,W,MCNjC,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACExB,MAAQ,CACNyB,UAAWP,IACXQ,UAAU,GAHd,EAMEvB,QAAU,EANZ,EAQEwB,YAAc,EARhB,uDAUE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,eAAe,WACvC,EAAKtB,SAAS,CAAEmB,UAAU,OAG5BE,SAASC,iBAAiB,SAAS,WACjC,EAAKtB,SAAS,CAAEmB,UAAU,OAG5BtB,KAAKuB,YAActB,OAAOC,aAAY,WACpC,EAAKC,SAAS,CAAEkB,UAAWP,QAC1B,QArBP,oBAwBE,WACE,MAAgCd,KAAKJ,MAA7B0B,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,UAElB,OACE,sBAAKV,UAAU,MAAf,UACE,6CAECW,GAAY,cAAC,EAAD,CAAOd,KAAMa,WA/BlC,GAAyBT,IAAMC,WCZ/Ba,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.edcf88d8.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n\n      // eslint-disable-next-line no-console\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    clockName: getRandomName(),\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  timerNameId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', () => {\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.timerNameId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}